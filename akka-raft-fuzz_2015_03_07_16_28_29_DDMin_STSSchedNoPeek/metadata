{
  "additional_metadata": null,
  "argv": [
    "./interposition/src/main/python/setup.py",
    "-n",
    "akka-raft-fuzz_2015_03_07_16_28_29_DDMin_STSSchedNoPeek"
  ],
  "cwd": "/Users/cs/Research/UCB/code/sts2-applications",
  "host": {
    "cpu_info": "",
    "free": "",
    "name": "yossarian",
    "num_cores": "0",
    "uptime": "16:38  up 1 day, 20:15, 5 users, load averages: 2.34 2.02 1.71"
  },
  "modules": {
    "sts2": {
      "branch": "akka-raft",
      "commit": "12ababb882b6de7effc95a5ee3fa03528abe7cd3",
      "diff": "diff --git a/notes.txt b/notes.txt\nindex 628f0ab..69db7c7 100644\n--- a/notes.txt\n+++ b/notes.txt\n@@ -1,3 +1,4 @@\n+TODO(cs): peek() may still hang...\n TODO(cs): generalize combine_graphs.py\n TODO(cs): right-to-left-removal\n TODO(cs): save smallest trace recorded so far. Not necessarily MCS!\ndiff --git a/src/main/scala/pl/project13/Runner.scala b/src/main/scala/pl/project13/Runner.scala\nindex f4c1603..3d20f77 100644\n--- a/src/main/scala/pl/project13/Runner.scala\n+++ b/src/main/scala/pl/project13/Runner.scala\n@@ -135,7 +135,7 @@ object Main extends App {\n \n   Instrumenter().registerShutdownCallback(shutdownCallback)\n \n-  val fuzz = true\n+  val fuzz = false\n \n   var traceFound: EventTrace = null\n   var violationFound: ViolationFingerprint = null\n@@ -161,7 +161,7 @@ object Main extends App {\n \n   val dir = if (fuzz) serializer.record_experiment(\"akka-raft-fuzz\",\n     traceFound.filterCheckpointMessages(), violationFound) else\n-    \"/Users/cs/Research/UCB/code/sts2-applications/experiments/akka-raft-fuzz_2015_03_06_20_20_13\"\n+    \"/Users/cs/Research/UCB/code/sts2-applications/experiments/akka-raft-fuzz_2015_03_07_16_28_29\"\n \n   /*\n   println(\"Trying randomDDMin\")\n@@ -187,6 +187,7 @@ object Main extends App {\n \n   serializer.serializeMCS(dir, mcs2, stats2, mcs_execution2, violation2)\n \n+  /*\n   println(\"Trying STSSchedDDMin\")\n   // Allow peek:\n   var (mcs3, stats3, mcs_execution3, violation3) =\n@@ -198,6 +199,7 @@ object Main extends App {\n       Some(Init.eventMapper))\n \n   serializer.serializeMCS(dir, mcs3, stats3, mcs_execution3, violation3)\n+  */\n \n   println(\"Trying RoundRobinDDMin\")\n   var (mcs4, stats4, mcs_execution4, violation4) =",
      "status": "On branch akka-raft\nYour branch is up-to-date with 'origin/akka-raft'.\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n\tmodified:   notes.txt\n\tmodified:   src/main/scala/pl/project13/Runner.scala\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")"
    }
  },
  "sys": {
    "lsb_release": "",
    "uname": "Darwin yossarian 13.4.0 Darwin Kernel Version 13.4.0: Wed Dec 17 19:05:52 PST 2014; root:xnu-2422.115.10~1/RELEASE_X86_64 x86_64"
  },
  "timestamp": "2015_03_07_16_38_48",
  "user": "cs"
}
