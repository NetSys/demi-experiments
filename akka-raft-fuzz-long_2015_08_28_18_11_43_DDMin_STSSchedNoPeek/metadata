{
  "additional_metadata": null,
  "argv": [
    "./interposition/src/main/python/setup.py",
    "-n",
    "akka-raft-fuzz-long_2015_08_28_18_11_43_DDMin_STSSchedNoPeek"
  ],
  "cwd": "/home/rcs/Research/UCB/code/sts2-applications",
  "host": {
    "cpu_info": "Intel(R) Xeon(R) CPU X5660 @ 2.80GHz",
    "free": "total       used       free     shared    buffers     cached\nMem:       6101548    2530816    3570732         36      55896     365548\n-/+ buffers/cache:    2109372    3992176\nSwap:      6283260      33588    6249672",
    "name": "c5",
    "num_cores": "12",
    "uptime": "18:11:46 up 17 days,  2:47,  2 users,  load average: 0.91, 0.62, 0.31"
  },
  "modules": {
    "sts2": {
      "branch": "raft-46",
      "commit": "fb29aa45cdd27b58fa3b348ec735c77b861e11d7",
      "diff": "diff --git a/src/main/resources/logback.xml b/src/main/resources/logback.xml\nindex 483d1ae..652b082 100644\n--- a/src/main/resources/logback.xml\n+++ b/src/main/resources/logback.xml\n@@ -6,7 +6,7 @@\n     </encoder>\n   </appender>\n \n-  <root level=\"trace\">\n+  <root level=\"WARN\">\n     <appender-ref ref=\"STDOUT\" />\n   </root>\n </configuration>\ndiff --git a/src/main/scala/pl/project13/Runner.scala b/src/main/scala/pl/project13/Runner.scala\nindex d655a29..04fb1b4 100644\n--- a/src/main/scala/pl/project13/Runner.scala\n+++ b/src/main/scala/pl/project13/Runner.scala\n@@ -203,7 +203,7 @@ object Main extends App {\n   val messageGen = new ClientMessageGenerator(members)\n   val fuzzer = new Fuzzer(0, weights, messageGen, prefix)\n \n-  val fuzz = false\n+  val fuzz = true\n \n   var traceFound: EventTrace = null\n   var violationFound: ViolationFingerprint = null\n@@ -255,9 +255,9 @@ object Main extends App {\n     println(\"MCS DIR: \" + mcs_dir)\n   } else { // !fuzz\n     val dir =\n-    \"/Users/cs/Research/UCB/code/sts2-applications/experiments/akka-raft-fuzz-long_2015_08_24_22_47_54\"\n+    \"experiments/akka-raft-fuzz-long_2015_08_24_22_47_54\"\n     val mcs_dir =\n-    \"/Users/cs/Research/UCB/code/sts2-applications/experiments/akka-raft-fuzz-long_2015_08_24_22_47_54_DDMin_STSSchedNoPeek\"\n+    \"experiments/akka-raft-fuzz-long_2015_08_24_22_47_54_DDMin_STSSchedNoPeek\"\n \n     val serializer = new ExperimentSerializer(\n       fingerprintFactory,\n@@ -266,16 +266,16 @@ object Main extends App {\n     val deserializer = new ExperimentDeserializer(mcs_dir)\n     val msgDeserializer = new RaftMessageDeserializer(Instrumenter()._actorSystem)\n \n-    // TODO(cs): rerun the fuzz run, so that we can reuse stats. [currently\n-    // legacy format]\n-    val (mcs, verified_mcs, violationFound, actors, _) =\n+    val (mcs, verified_mcs, violationFound, actors, stats) =\n       RunnerUtils.deserializeMCS(mcs_dir, msgDeserializer)\n \n     var removalStrategy = new SrcDstFIFORemoval(verified_mcs,\n       schedulerConfig.messageFingerprinter)\n \n     val (intMinStats, intMinTrace) = RunnerUtils.minimizeInternals(schedulerConfig,\n-      mcs, verified_mcs, actors, violationFound, removalStrategyCtor=() => removalStrategy)\n+      mcs, verified_mcs, actors, violationFound,\n+      removalStrategyCtor=() => removalStrategy,\n+      stats=Some(stats))\n \n     var additionalTraces = Seq[(String, EventTrace)]()\n \ndiff --git a/src/main/scala/pl/project13/scala/akka/raft/RaftActor.scala b/src/main/scala/pl/project13/scala/akka/raft/RaftActor.scala\nindex daa5eec..262cdcc 100644\n--- a/src/main/scala/pl/project13/scala/akka/raft/RaftActor.scala\n+++ b/src/main/scala/pl/project13/scala/akka/raft/RaftActor.scala\n@@ -50,9 +50,9 @@ abstract class RaftActor extends Actor with LoggingFSM[RaftState, Metadata]\n     case m =>\n       //println(\"RAFT \" + self.path.name + \" FSM received \" + m + \" \" + super.getLog.map(_.stateName) + \" \" +\n       //  isTimerActive(ElectionTimeoutTimerName) )\n-      println(\"BEFORE RECEIVE: \" + stateData)\n+      //println(\"BEFORE RECEIVE: \" + stateData)\n       super.receive(m)\n-      println(\"AFTER RECEIVE: \" + stateData)\n+      //println(\"AFTER RECEIVE: \" + stateData)\n       //println(\"RAFT \" + self.path.name + \" Done FSM received \" + m + \" \" + super.getLog.map(_.stateName))\n   }",
      "status": "On branch raft-46\nYour branch is up-to-date with 'origin/raft-46'.\n\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n\tmodified:   src/main/resources/logback.xml\n\tmodified:   src/main/scala/pl/project13/Runner.scala\n\tmodified:   src/main/scala/pl/project13/scala/akka/raft/RaftActor.scala\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")"
    }
  },
  "sys": {
    "lsb_release": "Ubuntu 14.04.1 LTS",
    "uname": "Linux c5 3.13.0-61-generic #100-Ubuntu SMP Wed Jul 29 11:21:34 UTC 2015 x86_64 x86_64 x86_64 GNU/Linux"
  },
  "timestamp": "2015_08_28_18_11_46",
  "user": "rcs"
}
