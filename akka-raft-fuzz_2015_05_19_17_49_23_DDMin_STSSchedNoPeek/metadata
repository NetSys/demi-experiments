{
  "additional_metadata": null,
  "argv": [
    "./interposition/src/main/python/setup.py",
    "-n",
    "akka-raft-fuzz_2015_05_19_17_49_23_DDMin_STSSchedNoPeek"
  ],
  "cwd": "/Users/cs/Research/UCB/code/sts2-applications",
  "host": {
    "cpu_info": "",
    "free": "",
    "name": "yossarian",
    "num_cores": "0",
    "uptime": "17:49  up 7 days,  4:43, 5 users, load averages: 2.62 1.80 1.60"
  },
  "modules": {
    "sts2": {
      "branch": "akka-raft",
      "commit": "309c7da67af136333ca6e8261db4a695cdea5cfa",
      "diff": "diff --git a/src/main/scala/pl/project13/Runner.scala b/src/main/scala/pl/project13/Runner.scala\nindex e736afe..09cc942 100644\n--- a/src/main/scala/pl/project13/Runner.scala\n+++ b/src/main/scala/pl/project13/Runner.scala\n@@ -144,18 +144,6 @@ object Main extends App {\n \n   Instrumenter().registerShutdownCallback(shutdownCallback)\n \n-  val prefix_dir = \"/Users/cs/Research/UCB/code/sts2-applications/experiments/\"\n-  val original = prefix_dir+\"akka-raft-fuzz_2015_05_17_17_14_33\"\n-  val mcs_no_shrink = prefix_dir+\"akka-raft-fuzz_2015_05_17_17_14_33_DDMin_STSSchedNoPeek\"\n-  val mcs_shrink = prefix_dir+\"akka-raft-fuzz_2015_05_17_17_14_33_DDMin_STSSchedNoPeek_shrunk\"\n-  var msgDeserializer = new RaftMessageDeserializer(Instrumenter().actorSystem)\n-  RunnerUtils.printMinimizationStats(original, mcs_no_shrink,\n-    msgDeserializer)\n-  RunnerUtils.printMinimizationStats(original, mcs_shrink,\n-    msgDeserializer)\n-  throw new IllegalStateException(\"wee\")\n-\n-\n   val fuzz = true\n \n   var traceFound: EventTrace = null\n@@ -171,7 +159,7 @@ object Main extends App {\n     val tuple = RunnerUtils.fuzz(fuzzer, raftChecks.invariant,\n                                  fingerprintFactory,\n                                  validate_replay=Some(replayerCtor),\n-                                 maxMessages=Some(500))\n+                                 maxMessages=Some(170))\n     traceFound = tuple._1\n     violationFound = tuple._2\n     depGraph = tuple._3\n@@ -189,54 +177,10 @@ object Main extends App {\n     filteredTrace=Some(filteredTrace)) else\n     \"/Users/cs/Research/UCB/code/sts2-applications/experiments/akka-raft-fuzz_2015_05_16_15_44_26_DDMin_STSSchedNoPeek\"\n \n-  /*\n-  println(\"Trying randomDDMin\")\n-  var (mcs1, stats1, mcs_execution1, violation1) =\n-    RunnerUtils.randomDDMin(dir,\n-      fingerprintFactory,\n-      new RaftMessageDeserializer(Instrumenter().actorSystem),\n-      raftChecks.invariant)\n-\n-  serializer.serializeMCS(dir, mcs1, stats1, mcs_execution1, violation1)\n-\n-  println(\"Trying STSSchedDDMinNoPeak\")\n-  // Dissallow peek:\n-  var (mcs2, stats2, mcs_execution2, violation2) =\n-    RunnerUtils.stsSchedDDMin(dir,\n-      fingerprintFactory,\n-      new RaftMessageDeserializer(Instrumenter().actorSystem),\n-      false,\n-      raftChecks.invariant)\n-\n-  serializer.serializeMCS(dir, mcs2, stats2, mcs_execution2, violation2)\n-  */\n-\n-  /*\n-  println(\"Trying STSSchedDDMin\")\n-  // Allow peek:\n-  var (mcs3, stats3, mcs_execution3, violation3) =\n-    RunnerUtils.stsSchedDDMin(dir,\n-      fingerprintFactory,\n-      new RaftMessageDeserializer(Instrumenter().actorSystem),\n-      true,\n-      raftChecks.invariant)\n-\n-  serializer.serializeMCS(dir, mcs3, stats3, mcs_execution3, violation3)\n-  */\n-\n-  /*\n-  println(\"Trying RoundRobinDDMin\")\n-  var (mcs4, stats4, mcs_execution4, violation4) =\n-    RunnerUtils.roundRobinDDMin(dir,\n-      fingerprintFactory,\n-      new RaftMessageDeserializer(Instrumenter().actorSystem),\n-      raftChecks.invariant)\n-\n-  serializer.serializeMCS(dir, mcs4, stats4, mcs_execution4, violation4)\n-  */\n-\n   traceFound = traceFound.intersection(filteredTrace, fingerprintFactory)\n \n+  var msgDeserializer = new RaftMessageDeserializer(Instrumenter().actorSystem)\n+\n   if (fuzz) {\n \n     for (shrink <- Seq(false, true)) {\n@@ -272,6 +216,9 @@ object Main extends App {\n                                           violation5)\n \n           serializer.recordMinimizedInternals(mcs_dir, stats, lastFailingTrace)\n+\n+          RunnerUtils.printMinimizationStats(dir, mcs_dir, msgDeserializer,\n+                                             fingerprintFactory)\n         case None =>\n           None\n       }\n@@ -280,7 +227,6 @@ object Main extends App {\n \n   if (!fuzz) {\n     val mcs_dir = \"/Users/cs/Research/UCB/code/sts2-applications/experiments/akka-raft-fuzz_2015_04_19_15_35_23_IncDDMin_DPOR\"\n-    var msgDeserializer = new RaftMessageDeserializer(Instrumenter().actorSystem)\n \n     println(\"Trying replay..\")\n     RunnerUtils.replayExperiment(mcs_dir, fingerprintFactory, msgDeserializer,",
      "status": "On branch akka-raft\nYour branch is up-to-date with 'origin/akka-raft'.\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n\tmodified:   src/main/scala/pl/project13/Runner.scala\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")"
    }
  },
  "sys": {
    "lsb_release": "",
    "uname": "Darwin yossarian 14.3.0 Darwin Kernel Version 14.3.0: Mon Mar 23 11:59:05 PDT 2015; root:xnu-2782.20.48~5/RELEASE_X86_64 x86_64"
  },
  "timestamp": "2015_05_19_17_49_24",
  "user": "cs"
}
