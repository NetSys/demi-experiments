{
  "additional_metadata": null,
  "argv": [
    "././interposition/src/main/python/setup.py",
    "-t",
    "-n",
    "akka-raft-fuzz-long"
  ],
  "cwd": "/Users/cs/Research/UCB/code/demi-applications",
  "host": {
    "cpu_info": "",
    "free": "",
    "name": "yossarian",
    "num_cores": "0",
    "uptime": "20:36  up 2 days, 22:42, 5 users, load averages: 1.75 1.46 1.25"
  },
  "modules": {
    "sts2": {
      "branch": "raft-45",
      "commit": "4894bd670d3a0e5bd4e9ba5f91493c107f5d0d3c",
      "diff": "diff --git a/src/main/scala/pl/project13/Runner.scala b/src/main/scala/pl/project13/Runner.scala\nindex ab112b5..3c66481 100644\n--- a/src/main/scala/pl/project13/Runner.scala\n+++ b/src/main/scala/pl/project13/Runner.scala\n@@ -155,8 +155,7 @@ object Init {\n }\n \n object Main extends App {\n-  Instrumenter().setLogLevel(\"OFF\")\n-  //Instrumenter().setLogLevel(\"DEBUG\")\n+  Instrumenter().setLogLevel(\"ERROR\")\n \n   EventTypes.setExternalMessageFilter(Init.externalMessageFilter)\n   Instrumenter().setPassthrough\n@@ -200,7 +199,7 @@ object Main extends App {\n   val messageGen = new ClientMessageGenerator(members)\n   val fuzzer = new Fuzzer(100, weights, messageGen, prefix)\n \n-  val fuzz = false\n+  val fuzz = true\n \n   var traceFound: EventTrace = null\n   var violationFound: ViolationFingerprint = null\n@@ -253,45 +252,21 @@ object Main extends App {\n       RunnerUtils.getDeliveries(verified_mcs.get).size)\n     println(\"MCS DIR: \" + mcs_dir)\n   } else { // !fuzz\n-    //val dir =\n-    //\"experiments/akka-raft-fuzz-long_2015_09_02_12_18_50\"\n+    val dir =\n+    \"experiments/akka-raft-fuzz-long_2015_09_02_12_18_50\"\n     val mcs_dir =\n     \"experiments/akka-raft-fuzz-long_2015_09_02_12_18_50_DDMin_STSSchedNoPeek\"\n \n     val msgSerializer = new RaftMessageSerializer\n     val msgDeserializer = new RaftMessageDeserializer(Instrumenter()._actorSystem)\n \n-    val deserializer = new ExperimentDeserializer(mcs_dir)\n-    val violation = deserializer.get_violation(msgDeserializer)\n-    val externals = deserializer.get_mcs\n+    def shouldRerunDDMin(externals: Seq[ExternalEvent]) =\n+      externals.exists({\n+        case s: Send => s.messageCtor.isInstanceOf[AppendWordConstuctor]\n+        case _ => false\n+      })\n \n-    println(\"externals:\")\n-    externals.foreach { case e => println(e) }\n-\n-    // TODO(cs): put me in RunnerUtils, along with recording.\n-    val sched = new InteractiveScheduler(schedulerConfig)\n-    Instrumenter().scheduler = sched\n-    val (trace, maybeViolation) = sched.run(externals)\n-\n-    val serializer = new ExperimentSerializer(\n-      fingerprintFactory,\n-      msgSerializer)\n-\n-    val new_dir = serializer.record_experiment(\"akka-raft-interactive\",\n-      trace.filterCheckpointMessages())\n-\n-    //serializer.recordMinimizationStats(dir, stats)\n-\n-    println(\"Found failing trace: \" + trace.filterCheckpointMessages().size)\n-    println(\"Saved trace at \" + new_dir)\n-\n-    // def shouldRerunDDMin(externals: Seq[ExternalEvent]) =\n-    //   externals.exists({\n-    //     case s: Send => s.messageCtor.isInstanceOf[AppendWordConstuctor]\n-    //     case _ => false\n-    //   })\n-\n-    // RunnerUtils.runTheGamut(dir, mcs_dir, schedulerConfig, msgSerializer,\n-    //   msgDeserializer, shouldRerunDDMin=shouldRerunDDMin)\n+    RunnerUtils.runTheGamut(dir, mcs_dir, schedulerConfig, msgSerializer,\n+      msgDeserializer, shouldRerunDDMin=shouldRerunDDMin)\n   }\n }",
      "status": "On branch raft-45\nYour branch is ahead of 'origin/raft-45' by 3 commits.\n  (use \"git push\" to publish your local commits)\nChanges not staged for commit:\n  (use \"git add <file>...\" to update what will be committed)\n  (use \"git checkout -- <file>...\" to discard changes in working directory)\n\n\tmodified:   src/main/scala/pl/project13/Runner.scala\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")"
    }
  },
  "sys": {
    "lsb_release": "",
    "uname": "Darwin yossarian 14.5.0 Darwin Kernel Version 14.5.0: Tue Sep  1 21:23:09 PDT 2015; root:xnu-2782.50.1~1/RELEASE_X86_64 x86_64"
  },
  "timestamp": "2016_01_03_20_36_00",
  "user": "cs"
}
